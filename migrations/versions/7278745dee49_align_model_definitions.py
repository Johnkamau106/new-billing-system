"""Align model definitions

Revision ID: 7278745dee49
Revises: 4a1e28c72b8c
Create Date: 2025-08-28 13:14:03.188716

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7278745dee49'
down_revision = '4a1e28c72b8c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('client', 'clients')
    op.create_table('alert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('payload', sa.Text(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_alert_timestamp'), ['timestamp'], unique=False)

    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('plan_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bandwidth_usage', schema=None) as batch_op:
        batch_op.drop_constraint('bandwidth_usage_client_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clients', ['client_id'], ['id'])

    with op.batch_alter_table('bill', schema=None) as batch_op:
        batch_op.drop_constraint('bill_client_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clients', ['client_id'], ['id'])

    with op.batch_alter_table('radius_session', schema=None) as batch_op:
        batch_op.drop_constraint('fk_radius_session_client_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'clients', ['client_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('radius_session', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_radius_session_client_id', 'client', ['client_id'], ['id'])

    with op.batch_alter_table('bill', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bill_client_id_fkey', 'client', ['client_id'], ['id'])

    with op.batch_alter_table('bandwidth_usage', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('bandwidth_usage_client_id_fkey', 'client', ['client_id'], ['id'])

    op.rename_table('clients', 'client')
    op.drop_table('payments')
    op.drop_table('invoice_items')
    op.drop_table('invoices')
    with op.batch_alter_table('alert', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_alert_timestamp'))

    op.drop_table('alert')
    # ### end Alembic commands ###